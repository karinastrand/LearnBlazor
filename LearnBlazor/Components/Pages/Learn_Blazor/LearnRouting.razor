@page "/learnRouting"

@* @page "/learnRouting/{Param1}"
@page "/learnRouting/{Param1}/{Param2}" *@

@page "/learnBlazor/learnRouting"
@page "/learnRouting/learnBlazor"
@page "/learnRouting/catch-all/{*PageParameters}"

@inject NavigationManager _NavigationManager;

<h3>LearnRouting</h3>
<p>Param1: @Param1</p>
<p>Param2: @Param2</p>
<p>PageParameters : @PageParameters</p>

@* <NavLink href="learnRouting?Param1=Learn&Param2=Blazor" class="btn btn-primary">Navigate to query parameter</NavLink>
 *@

<button @onclick="NavigateToQueryParam" class="btn btn-Primary">Navigate to query parameter</button>
<button @onclick="LoadParameters" class="btn btn-success">Load Parameters</button>

<div class="bg-info" style="height:500px"</div>
    <h2 id="targetElement">Main Title</h2>


@code {
    [SupplyParameterFromQuery(Name ="Param1")]
    public string Param1 { get; set; }
    [SupplyParameterFromQuery(Name = "Param2")]
    public string Param2 { get; set; } = "";
    [Parameter]
    public string PageParameters { get; set; } = "";

    private void LoadParameters()
    {
        var uri = new Uri(_NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        Param1 = query["Param1"];
        Param2 = query["Param2"];
      //  _NavigationManager.Refresh(forceReload:true);
    }

    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("learnRouting?Param1=Learn&Param2=Blazor");
    }
}
