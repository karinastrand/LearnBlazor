@page "/learnBlazor/bindProp"
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        IsActive : <input type="checkbox" @bind="Product.IsActive"  />
        <br />
        Input Price: <input type="number" @bind="@Product.Price" @bind:event="oninput" /> <br />
        <br />
        Product Properties: <br />
        <select @bind="selectedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
        <br />
       
       
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr/>
        Name : @Product.Name <br />
        IsActive : @Product.IsActive <br />
        Price: @Product.Price <br />
        This product is: @(Product.IsActive ? "Active" : "Inactive")<br /><br/>
        Selected Prop : @selectedProp
        <br/>
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            <p>Selected Value : @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }

    </div>
    <div class="col-12 p-3">
        <h2 class="text-success">Products Table</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <td>Product Name</td>
                    <td>Price</td>
                    <td>IsActive</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ProductList)
                {
                    <tr>
                        <td><input type="text" @bind="item.Name" @bind:event="oninput"/></td>
                        <td><input type="text" @bind="item.Price" @bind:event="oninput"  /></td>
                        <td><input type="checkbox" @bind="item.IsActive"/></td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>
        <div class="col-12 mt-4">
        <h2>Product Summary</h2>
        @foreach (var item in ProductList)
        {
            <p> @item.Name [@item.Price] Is @(item.IsActive ? "Active" : "Inactive") </p>
        }
        </div>
    </div>
</div>



@code {
    private string selectedProp="";
    Product Product = new()
    {
        Id=1,
        Name="Product 1",
        IsActive=true,
        Price=50,
        ProductProperties=new List<Product_Prop>()
        {
            new Product_Prop
            {
                Id=1,
                Key="Color",
                Value="Red"
            },
            new Product_Prop
            {
                Id=2,
                Key="Size",
                Value="20oz"
            },
            new Product_Prop
            {
                Id=3,
                Key="Flavor",
                Value="Rose"
            }
        }
    };
    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price=5.99,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        ProductList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price=10.59,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new Product_Prop { Id = 3, Key = "Color", Value = "White" }
                }
            });
    }

}
